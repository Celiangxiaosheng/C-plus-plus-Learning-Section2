#include<iostream>
using namespace std;

/***************************************************************************************************
* 1.问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类或父类中同名的数据呢？
*	访问子类同名成员：直接访问即可
*	访问父类同名成员：需要加作用域
* 2.总结
*	（1）子类对象可以直接访问到子类中同名成员
*	（2）子类对象加作用域可以访问到父类同名成员
*	（3）当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数
****************************************************************************************************/

class Base1
{
public:
	Base1()
	{
		m_A = 100;
	}
	void func()
	{
		cout << "Base1 下的 func() 调用" << endl;
	}
	void func(int a)
	{
		cout << "Base1 下的 func(int a) 调用" << endl;
	}
	int m_A;
};

class Son : public Base1
{
public:
	Son()
	{
		m_A = 200;
	}

	void func()
	{
		cout << "Son 下的 func() 调用" << endl;
	}
	int m_A;
};

void test82803()
{
	Son s;
	cout << "Son 下 m_A = " << s.m_A << endl;
	//如果通过子类对象访问到父类中同名属性成员，需要加作用域
	cout << "Bases 下 m_A = " << s.Base1::m_A << endl;
}
void test82804()
{
	Son s;
	s.func();
	s.Base1::func();

	//如果子类中出现和父类同名的成员函数，子类的同名成员函数会隐藏掉父类中所有的同名成员函数
	//如果想访问到父类中被隐藏的同名成员函数，需要加作用域

	s.Base1::func(100);

}

//int main()
//{
//	test82804();
//	system("pause");
//	return 0;
//}